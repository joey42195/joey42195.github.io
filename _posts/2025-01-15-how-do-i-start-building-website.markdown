---
layout: post
title:  "我如何開始建構一個網站系統？"
date:   2025-01-17 15:00:00 +0800
categories: 面試問題
---
以擔任 Web 全端工程師的角度，在理解客戶或PM需求之後，我會利用簡單的 ERD（Entity-Relationship Diagram）先從資料庫的表格開始設計，譬如學校的教務系統，裡面就會有老師、學生等等的資料表，先概略地定義好這些表格的欄位細節與之間的互動關係（一對一、一對多、多對多...）後，檢視看看有沒有可以進一步正規化的地方，讓資料表的欄位與角色安排更為合理。

規劃好後，以 Rails 來說，就是開始建立 migrations，將設計構思，實際落實為 Database 的 scheam。

網頁應用程式做多了，會發現網站系統都大同小異，譬如說都會有：登入註冊、權限管理這類功能，其餘就是跟商業邏輯有關的表格，例如：教務系統有老師、學生，訂房系統有房間、訂房時段、顧客等。而網站的畫面，其實都可說是賦予這些資料庫表格，一個可以操作的介面，也就是就是所謂的 CRUD（新增、讀取、修改、刪除）。

使用 Rub on Rails 開發，Server Side 的  Rending，順著 Rails 天生的 Restful endpoints，建構基礎的 CRUD 畫面是相當迅速方便的。

至於登入的頁面該長得如何，要放在網站流程的哪個位置，這些是屬於 UI/UX 設計的範疇。身為全端工程師，我有能力基於自身對於 UI/UX 的敏感度，先打造一個網站的基本雛型，並具有基礎美觀與易用性。

在有設計師提供設計稿的狀況下，按稿進行切版與實作畫面的動態效果。若團隊搭配有前端設計師，則可能會先實作出樸素的 html 且能正常操作 CRUD 的畫面，再交給前端進一步完成。

最後一步是寫測試，我會針對具有高度重要性的功能、複雜邏輯的功能，與容易被改壞的功能去寫，不會全面性寫覆蓋率 100% 的測試。

以上大致是我從零開始建構一個專案的步驟，通常在替舊專案增加新功能時，也是類似的流程。
